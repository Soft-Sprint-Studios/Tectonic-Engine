#version 460 core
layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

uniform sampler2D u_inputTexture;

layout(std430, binding = 0) buffer HistogramBuffer {
    uint histogram[256];
};

const float MIN_LOG_LUM = -10.0;
const float MAX_LOG_LUM = 10.0;
const float LOG_LUM_RANGE = MAX_LOG_LUM - MIN_LOG_LUM;

void main()
{
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);
    ivec2 dims = textureSize(u_inputTexture, 0);

    if (pixelCoords.x >= dims.x || pixelCoords.y >= dims.y) {
        return;
    }

    vec3 color = texelFetch(u_inputTexture, pixelCoords, 0).rgb;
    float luminance = dot(color, vec3(0.2126, 0.7152, 0.0722));

    if (luminance > 0.0) {
        float logLuminance = clamp(log2(luminance), MIN_LOG_LUM, MAX_LOG_LUM);
        float normalizedLum = (logLuminance - MIN_LOG_LUM) / LOG_LUM_RANGE;
        uint binIndex = uint(normalizedLum * 255.0);
        atomicAdd(histogram[binIndex], 1);
    }
}