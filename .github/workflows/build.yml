name: CMake Build (Linux & Windows)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-linux-x64-release:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libsdl2-dev libglew-dev libopenal-dev libbullet-dev libfreetype6-dev binutils
      - run: cmake -S . -B build-linux-x64-release -DCMAKE_BUILD_TYPE=Release
      - run: cmake --build build-linux-x64-release --config Release -- -j$(($(nproc)/2))
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-linux-x64-release
          path: build-linux-x64-release/TectonicEngine

  build-linux-x64-relwithdebinfo:
    runs-on: [self-hosted, linux]
    steps:
      - uses: actions/checkout@v3
      - run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential libsdl2-dev libglew-dev libopenal-dev libbullet-dev libfreetype6-dev binutils
      - run: cmake -S . -B build-linux-x64-relwithdebinfo -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - run: cmake --build build-linux-x64-relwithdebinfo --config RelWithDebInfo -- -j$(($(nproc)/2))
      - name: Strip Debug Symbols
        run: |
          cp build-linux-x64-relwithdebinfo/TectonicEngine build-linux-x64-relwithdebinfo/TectonicEngine.debug
          objcopy --only-keep-debug build-linux-x64-relwithdebinfo/TectonicEngine.debug build-linux-x64-relwithdebinfo/TectonicEngine.debugsymbols
          objcopy --strip-debug --add-gnu-debuglink=build-linux-x64-relwithdebinfo/TectonicEngine.debugsymbols build-linux-x64-relwithdebinfo/TectonicEngine
      - name: Patch Executable with Checksum
        run: build-linux-x64-relwithdebinfo/Patcher build-linux-x64-relwithdebinfo/TectonicEngine
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-linux-x64-relwithdebinfo
          path: |
            build-linux-x64-relwithdebinfo/TectonicEngine
            build-linux-x64-relwithdebinfo/TectonicEngine.debugsymbols

  build-windows-x64-release:
    runs-on: [self-hosted, windows]
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S . -B build-windows-x64-release -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release
      - run: cmake --build build-windows-x64-release --config Release
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-windows-x64-release
          path: build-windows-x64-release/Release/TectonicEngine.exe

  build-windows-x64-relwithdebinfo:
    runs-on: [self-hosted, windows]
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S . -B build-windows-x64-relwithdebinfo -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - run: cmake --build build-windows-x64-relwithdebinfo --config RelWithDebInfo
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-windows-x64-relwithdebinfo
          path: |
            build-windows-x64-relwithdebinfo/RelWithDebInfo/TectonicEngine.exe
            build-windows-x64-relwithdebinfo/RelWithDebInfo/TectonicEngine.pdb

  build-windows-x86-release:
    runs-on: [self-hosted, windows]
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S . -B build-windows-x86-release -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=Release
      - run: cmake --build build-windows-x86-release --config Release
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-windows-x86-release
          path: build-windows-x86-release/Release/TectonicEngine.exe

  build-windows-x86-relwithdebinfo:
    runs-on: [self-hosted, windows]
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S . -B build-windows-x86-relwithdebinfo -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - run: cmake --build build-windows-x86-relwithdebinfo --config RelWithDebInfo
      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const artifact of res.data.artifacts) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
              });
            }
      - uses: actions/upload-artifact@v4
        with:
          name: TectonicEngine-windows-x86-relwithdebinfo
          path: |
            build-windows-x86-relwithdebinfo/RelWithDebInfo/TectonicEngine.exe
            build-windows-x86-relwithdebinfo/RelWithDebInfo/TectonicEngine.pdb
